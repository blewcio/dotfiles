# Commented out. I'm not used to C-a that much, but prefer C-A for movement.
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix

set -g history-limit 10000

# Improve colors
# set -g default-terminal "screen-256color"
# set-option -g default-terminal "screen-256color"
# Soften status bar color from harsh green to light gray
set -g status-bg '#777777'
set -g status-fg '#aaaaaa'

# Enable mouse control
set-option -g mouse on
# set -g mouse on
# set-window-option -g mode-mouse on

# Improve responsiveness
set -sg escape-time 1
# Start windows/pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Notify about active windows
setw -g monitor-activity on
set  -g visual-activity on

# Vim-like key bindings
set -g mode-keys vi

# y and p like in vim
unbind i
bind i copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi C-u send-keys -X halfpage-up
bind-key -T copy-mode-vi C-d send-keys -X halfpage-down

# Extra commands to manage windows/panes like in vim
bind-key o   resize-pane -Z # Toggle current pane to full screen
bind-key c   kill-pane      # Close a pane
bind-key C-c kill-pane -a   # Close all others but not the current pane
unbind n
bind-key n   new-window

unbind 's'
unbind '"'
unbind %
bind s split-window -h
bind v split-window -v

# Moving between panes like in vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Moving between windows like in vim
bind -r C-h  select-window -t :-
bind -r C-l  select-window -t :+
bind-key C-^ last-window  # Toggle between last active windows (not reliable)
bind-key C-6 last-window  # Toggle between last active windows

# Resizing of panes
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits
# (For IDE like integration with vim)
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# General status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 80
set-option -g status-right "'#{prefix_highlight}#[fg=green]#H #[fg=yellow]%Y-%m-%d #[fg=cyan]%H:%M:%S"

# Enable image preview in Terminal with tmux (e.g. imgcat)
set -g default-terminal "tmux-256color"
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

#Plugins & plugin manager 
# prefix + I - Installs new plugins from GitHub or any other git repository Refreshes TMUX environment
# prefix + U - updates plugin(s)
# prefix + alt + u - remove/uninstall plugins not on the plugin list (first remove from config file)
set -g @plugin 'tmux-plugins/tpm'
# Persist sessions after reboots
set -g @plugin 'tmux-plugins/tmux-resurrect'
# TODO: set -g @plugin 'tmux-plugins/tmux-continuum' 
# A set of tmux options that should be acceptable to everyone.
set -g @plugin 'tmux-plugins/tmux-sensible'
# Easymotion like jump on screen
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'f'
# Manage tmux with fzf (Prefix + F)
set -g @plugin 'sainnhe/tmux-fzf'
# Highlight if tmux prefix is active
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# Complete commands that require you to retype text that is already on the screen
# press tmux prefix + tab to start extrakto
# fuzzy find the text/path/url/line
# use custom filters (ctrl + f)
# press
# tab to insert it to the current pane,
# enter to copy it to the clipboard,
# set -g @plugin 'laktak/extrakto'

# Initialize TMUX plugin manager (keep this line at the very bottom of
# tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
